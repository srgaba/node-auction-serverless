service: condingly

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    AUCTIONS_TABLE_NAME: AuctionsTable-${self:provider.stage}
    JWK_AUTHORIZER_URL: https://login.microsoftonline.com/84dc3018-9598-4df2-a3bd-995094f6640b/discovery/v2.0/keys
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}
  
resources:
  Resources: 
   AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

functions:
  tester:
    handler: src/handlers/tester.handler
    events:
      - http:
          method: GET
          path: /tester

  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          authorizer: ${self:custom.authorizerArn}
          method: POST
          path: /auctions

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions

  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auctions/{id}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          authorizer: ${self:custom.authorizerArn}
          method: PATCH
          path: /auctions/{id}/bid

  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(10 minutes)

  authorizer:
    handler: src/handlers/auth.handler

custom: 
  authorizerArn: arn:aws:lambda:eu-west-1:851700709712:function:condingly-dev-authorizer
  MailQueue:
    arn: ${cf:auction-notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:auction-notification-service-${self:provider.stage}.MailQueueUrl}
  bundle:
    linting: false
